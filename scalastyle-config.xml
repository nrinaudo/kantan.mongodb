<scalastyle>
    <name>kantan configuration</name>

    <!-- = Whitespace ============================================================================================== -->
    <!-- =========================================================================================================== -->
    <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLineLength">120</parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"/>



    <!-- = Naming ================================================================================================== -->
    <!-- =========================================================================================================== -->
    <check level="error" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex">[A-Z\~\*\/][A-Za-z]*</parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex">[A-Za-z\~\*\/][A-Za-z]*</parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex">^[a-z][a-z0-9]*$</parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ClassTypeParameterChecker" enabled="true" >
        <parameters>
            <parameter name="regex">^[A-Z_]$</parameter>
        </parameters>
    </check>


    <!-- = Language ================================================================================================ -->
    <!-- =========================================================================================================== -->
    <check level="error" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"/>
    <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true">
        <parameters>
            <parameter name="regex">println</parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.NotImplementedErrorUsage" enabled="true"/>
    <check level="error" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true">
        <parameters>
            <parameter name="ignoreOverride">true</parameter>
        </parameters>
    </check>
    <check level="error" enabled="true" class="org.scalastyle.scalariform.ImportOrderChecker">
        <parameters>
            <parameter name="groups">all</parameter>
            <parameter name="group.all">.+</parameter>
        </parameters>
    </check>
</scalastyle>
